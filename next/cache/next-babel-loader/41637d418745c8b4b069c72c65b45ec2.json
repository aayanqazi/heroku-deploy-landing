{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React, { useState, useRef } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport ScrollSpyMenu from 'common/src/components/ScrollSpyMenu';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport { Icon } from 'react-icons-kit';\nimport { menu } from 'react-icons-kit/feather/menu';\nimport { x } from 'react-icons-kit/feather/x';\nimport { search } from 'react-icons-kit/feather/search';\nimport Logo from 'reusecore/src/elements/UI/Logo';\nimport Button from 'reusecore/src/elements/Button';\nimport Container from 'common/src/components/UI/Container';\nimport useOnClickOutside from 'common/src/hooks/useOnClickOutside';\nimport NavbarWrapper, { MenuArea, MobileMenu, Search } from './navbar.style';\nimport { navbar } from 'common/src/data/AppClassic';\n\nconst Navbar = () => {\n  const {\n    logo,\n    navMenu\n  } = navbar;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    search: '',\n    searchToggle: false,\n    mobileMenu: false\n  });\n  const searchRef = useRef(null);\n  useOnClickOutside(searchRef, () => setState(_objectSpread({}, state, {\n    searchToggle: false\n  })));\n\n  const toggleHandler = type => {\n    if (type === 'search') {\n      setState(_objectSpread({}, state, {\n        search: '',\n        searchToggle: !state.searchToggle,\n        mobileMenu: false\n      }));\n    }\n\n    if (type === 'menu') {\n      setState(_objectSpread({}, state, {\n        mobileMenu: !state.mobileMenu\n      }));\n    }\n  };\n\n  const handleOnChange = event => {\n    setState(_objectSpread({}, state, {\n      search: event.target.value\n    }));\n  };\n\n  const handleSearchForm = event => {\n    event.preventDefault();\n\n    if (state.search !== '') {\n      console.log('search data: ', state.search);\n      setState(_objectSpread({}, state, {\n        search: ''\n      }));\n    } else {\n      console.log('Please fill this field.');\n    }\n  };\n\n  return __jsx(NavbarWrapper, {\n    className: \"navbar\"\n  }, __jsx(Container, null, __jsx(Logo, {\n    className: \"logo\",\n    href: \"/appclassic\",\n    logoSrc: logo,\n    title: \"App Classic\"\n  }), __jsx(MenuArea, {\n    className: state.searchToggle ? 'active' : ''\n  }, __jsx(ScrollSpyMenu, {\n    className: \"menu\",\n    menuItems: navMenu,\n    offset: -84\n  }), __jsx(Search, {\n    className: \"search\",\n    ref: searchRef\n  }, __jsx(\"form\", {\n    onSubmit: handleSearchForm\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: state.search,\n    placeholder: \"Enter your keyword\",\n    onChange: handleOnChange\n  })), __jsx(Button, {\n    className: \"text\",\n    variant: \"textButton\",\n    icon: __jsx(Icon, {\n      icon: state.searchToggle ? x : search\n    }),\n    onClick: () => toggleHandler('search')\n  })), __jsx(AnchorLink, {\n    href: \"#trail\",\n    offset: 84\n  }, __jsx(Button, {\n    className: \"trail\",\n    title: \"Try for Free\"\n  })), __jsx(Button, {\n    className: \"menubar\",\n    icon: state.mobileMenu ? __jsx(Icon, {\n      className: \"bar\",\n      icon: x\n    }) : __jsx(Fade, null, __jsx(Icon, {\n      className: \"close\",\n      icon: menu\n    })),\n    color: \"#0F2137\",\n    variant: \"textButton\",\n    onClick: () => toggleHandler('menu')\n  }))), __jsx(MobileMenu, {\n    className: `mobile-menu ${state.mobileMenu ? 'active' : ''}`\n  }, __jsx(Container, null, __jsx(ScrollSpyMenu, {\n    className: \"menu\",\n    menuItems: navMenu,\n    offset: -84\n  }), __jsx(Button, {\n    title: \"Try for Free\"\n  }))));\n};\n\nexport default Navbar;","map":null,"metadata":{},"sourceType":"module"}